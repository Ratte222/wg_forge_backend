// <auto-generated />
using DAL.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DAL.Migrations
{
    [DbContext(typeof(CatContext))]
    [Migration("20210713095239_AddedIntermediateEntity")]
    partial class AddedIntermediateEntity
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DAL.Entities.Cat", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TailLength")
                        .HasColumnType("int");

                    b.Property<int>("WhiskersLength")
                        .HasColumnType("int");

                    b.HasKey("Name");

                    b.ToTable("Cats");
                });

            modelBuilder.Entity("DAL.Entities.CatColorInfo", b =>
                {
                    b.Property<string>("Color")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("color");

                    b.Property<int>("Count")
                        .HasColumnType("int")
                        .HasColumnName("count");

                    b.HasKey("Color");

                    b.ToTable("cat_colors_info");
                });

            modelBuilder.Entity("DAL.Entities.CatOwner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CatOwners");
                });

            modelBuilder.Entity("DAL.Entities.CatStat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("TailLengthMean")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("tail_length_mean");

                    b.Property<decimal>("TailLengthMedian")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("tail_length_median");

                    b.Property<int>("TailLengthMode")
                        .HasColumnType("int")
                        .HasColumnName("tail_length_mode");

                    b.Property<decimal>("WiskersLengthMean")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("whiskers_length_mean");

                    b.Property<decimal>("WiskersLengthMedian")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("whiskers_length_median");

                    b.Property<int>("WiskersLengthMode")
                        .HasColumnType("int")
                        .HasColumnName("whiskers_length_mode");

                    b.HasKey("Id");

                    b.ToTable("cats_stat");
                });

            modelBuilder.Entity("DAL.Entities.CatsAndOwner", b =>
                {
                    b.Property<int>("CatOwnersId")
                        .HasColumnType("int");

                    b.Property<string>("CatsName")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("CatOwnersId", "CatsName");

                    b.HasIndex("CatsName");

                    b.ToTable("CatsAndOwners");
                });

            modelBuilder.Entity("DAL.Entities.CatsAndOwner", b =>
                {
                    b.HasOne("DAL.Entities.CatOwner", "CatOwner")
                        .WithMany("CatsAndOwners")
                        .HasForeignKey("CatOwnersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DAL.Entities.Cat", "Cat")
                        .WithMany("CatsAndOwners")
                        .HasForeignKey("CatsName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cat");

                    b.Navigation("CatOwner");
                });

            modelBuilder.Entity("DAL.Entities.Cat", b =>
                {
                    b.Navigation("CatsAndOwners");
                });

            modelBuilder.Entity("DAL.Entities.CatOwner", b =>
                {
                    b.Navigation("CatsAndOwners");
                });
#pragma warning restore 612, 618
        }
    }
}
